@page "/"
@using BlazorSchool.Components.Web.UI
@using BlazorSchool.Components.Web.Variants
@using System.IO
@using Microsoft.AspNetCore.Hosting
@inject IWebHostEnvironment Environment
@rendermode InteractiveServer

<PageTitle>Forms</PageTitle>

<BlazorLibrary>
    <div class="positioning">
        <div class="main-page">
            <BlazorCaptureElement Token="Form" class="flex-fill">
                <div class="header">
                    <img src="/logo_uj.png" alt="placeholder"/>
                    @if (edit)
                    {
                        <textarea class="roomNumber" rows="1" cols="20" @bind="@roomNumber"></textarea>
                    }
                    else
                    {
                        <p class="roomNumber">@roomNumber</p>
                    }
                </div>

                @if (edit)
                {
                    <textarea class="names" rows="4" cols="35" @bind="@names"></textarea>
                }
                else
                {
                    @foreach (var name in names.Split('\n'))
                    {
                        <p class="names">@name</p>
                    }
                }
                


            </BlazorCaptureElement>
        </div>

        <div class="grid">

            <Button Color="ButtonColor.Primary" Size="Size.Large" @onclick="OnShowRoomNumberClick"> Numer sali </Button>
            <Button Color="ButtonColor.Primary" Size="Size.Large" @onclick="OnShowNamesClick"> Nazwiska </Button>
            <Button Color="ButtonColor.Primary" Size="Size.Large" @onclick="OnShowLoadClick"> Wczytaj </Button>
            <Button Color="ButtonColor.Primary" Size="Size.Large" @onclick="@(() => { edit = true; })"> Edytuj </Button>
            <Button Color="ButtonColor.Primary" Size="Size.Large" @onclick="@(() => { edit = false; })"> Zapisz </Button>
            <BlazorCapturePdfButton Variants="new[] { BaseVariants.Primary }" TargetToken="Form">Zapisz do PDF</BlazorCapturePdfButton>

        </div>
    </div>

</BlazorLibrary>

<Modal @ref="RoomNumber" title="Numer sali" IsVerticallyCentered="true">
    <BodyTemplate>
        <input type="text" @bind="roomNumber"/>
    </BodyTemplate>
    <FooterTemplate>
    </FooterTemplate>
</Modal>

<Modal @ref="Names" title="Nazwiska" IsVerticallyCentered="true">
    <BodyTemplate>
    </BodyTemplate>
    <FooterTemplate>
    </FooterTemplate>
</Modal>

<Modal @ref="Load" title="Wczytaj" IsVerticallyCentered="true">
    <BodyTemplate>
        <InputFile OnChange="@LoadFiles" multiple />
    </BodyTemplate>
    <FooterTemplate>
    </FooterTemplate>
</Modal>

@code {
    private Modal RoomNumber = default!;
    private Modal Names = default!;
    private Modal Load = default!;
    private string textInput;
    private string roomNumber;
    private ElementReference Img;
    private IBrowserFile loadedFile;
    private long maxFileSize = 1024 * 15;
    private int maxAllowedFiles = 3;
    private bool isLoading;
    private string names = "";
    private bool edit = false;
    
    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        isLoading = true;

        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            try
            {
                var trustedFileName = Path.GetRandomFileName();
                var path = Path.Combine(Environment.ContentRootPath,
                    Environment.EnvironmentName, "unsafe_uploads",
                    trustedFileName);

                await using FileStream fs = new(path, FileMode.Create);
                await file.OpenReadStream(maxFileSize).CopyToAsync(fs);
                
                loadedFile = file;
            }
            catch (Exception ex){}
        }

        isLoading = false;
    }

    private async Task OnShowRoomNumberClick()
    {
        await RoomNumber.ShowAsync();
    }

    private async Task OnShowNamesClick()
    {
        await Names.ShowAsync();
    }
    
    private async Task OnShowLoadClick()
    {
        await Load.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await RoomNumber.HideAsync();
        await Names.HideAsync();
        await Load.HideAsync();
    }

}